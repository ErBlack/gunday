body {
    margin: 0;
    padding: 0;
    background-color: #010101;
    display: grid;
    justify-content: center;
    min-height: 100vh;
    font-weight: 400;
    font-style: normal;
    font-size: 16px;
}

#background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('bg.jpg');
    background-attachment: fixed;
    background-size: 102% auto;
    background-repeat: no-repeat;
    background-position: bottom center;
    transition: filter 1s ease-in-out;
    z-index: -1;
}

#game {
    display: none;
    opacity: 0;
    transition: opacity 1s ease-in-out allow-discrete;
}

.game {
    #invitation {
        display: none;
    }

    #game {
        display: block;
        opacity: 1;

        @starting-style {
            opacity: 0;
        }
    }

    #background {
        filter: blur(4px) brightness(0.5);
    }
}

#invitation {
    padding: 2rem;
    font-family: 'Press Start 2P', system-ui;
    color: #fff;
    text-shadow: 1px 1px 0 #000, 2px 2px 0 #000;
    font-size: clamp(0.8rem, 2vw, 1.5rem);
    box-sizing: border-box;
    width: clamp(390px, 70vw, 920px);

    section:not(:last-child) {
        margin-bottom: clamp(1rem, 5vw, 4rem);
    }

    h1 {
        margin: 0 0 clamp(0.2em, calc(9rem - 1em), 0.5em) 0;
        color: transparent;
        text-shadow: none;
        background: url('title.png') center/cover no-repeat;
        aspect-ratio: 1611 / 296;
        user-select: none;
    }

    h2 {
        font-size: clamp(2rem, 3vw, 3rem);
        margin: 0 0 clamp(0.25em, 1em, 0.6em) 0;
        
        [draggable] {
            cursor: crosshair;
        }
    }

    p,
    ul {
        line-height: 1.35em;
    }

    p:not(:last-child),
    ul:not(:last-child) {
        line-height: 1.35em;
        margin: 0 0 clamp(1rem, 2vw, 2rem) 0;
    }

    ul {
        list-style: none;
        padding: 0;
    }

    li {
        margin: 0;
        display: grid;
        gap: 1em;
        grid-template-columns: 5em auto;
        margin-bottom: 0.25em;
    }

    svg {
        --size: clamp(3rem, 6vw, 6rem);
        width: var(--size);
        height: var(--size);
        transition: transform 0.2s ease-in-out;
    }

    .links {
        display: grid;
        gap: 1.5em;
        grid-template-columns: repeat(3, max-content);
        justify-content: space-between;
    }

    a {
        display: grid;
        gap: 0.5em;
        color: #fff;
        text-decoration-style: dotted;
        justify-items: center;
    }

    a:hover {
        text-decoration-style: dashed;

        svg {
            transform: scale(1.05);
        }
    }

    button {
        font-family: inherit;
        font-size: inherit;
        background: transparent;
        color: inherit;
        border: solid 3px #fff;
        padding: 0.5em 1em;
        border-radius: 0.5em;
        user-select: text;
    }

    #code {
        border: none;
    }

    #code:empty {
        display: none;
    }

    #code:not(:empty)::before {
        content: 'code: ';
    }
}

canvas {
    display: block;
    position: fixed;
    margin: auto;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    height: 672px;
    width: 896px;
    margin: auto;
    border-radius: 5px;
    image-rendering: optimizeSpeed;
    image-rendering: -moz-crisp-edges;
    image-rendering: -o-crisp-edges;
    image-rendering: -webkit-optimize-contrast;
    image-rendering: pixelated;
    image-rendering: crisp-edges;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
    background: #010101;
    border: solid 8px #333;
    outline: solid 1px #010101;
    transform: scale(calc((100vw - 32px) / 896px));
}

@media (min-aspect-ratio: 4/3) {
    canvas {
        transform: scale(calc((100vh - 32px) / 672px));
    }
}

body:has(#bonus) {
    pointer-events: none;
}

#bonus {
    position: fixed;
    display: block;
    padding: 20px;
    left: 100%;
    width: 150px;
    height: 100px;
    background: url('./assets/ui/bonus.png') center no-repeat;
    background-size: 78px 42px;
    animation: bonus 5s linear;
    left: calc(100% * var(--progress) - 150px);
    transform: translateY(calc(sin(var(--progress) * 12) * 30px));
    border: none;
    pointer-events: all;
}

@property --progress {
    syntax: '<number>';
    inherits: false;
    initial-value: 0;
}

@keyframes bonus {
    from {
        --progress: 1;
    }
    to {
        --progress: 0;
    }
}
